<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Konveyor Documentation on Documentation for Konveyor projects</title><link>http://konveyor.github.io/</link><description>Recent content in Konveyor Documentation on Documentation for Konveyor projects</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Apr 2022 14:58:17 -0600</lastBuildDate><atom:link href="http://konveyor.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation</title><link>http://konveyor.github.io/move2kube/installation/</link><pubDate>Fri, 26 Aug 2022 15:36:54 -0600</pubDate><guid>http://konveyor.github.io/move2kube/installation/</guid><description>For installation instructions visit https://move2kube.konveyor.io/installation.</description></item><item><title>Overview</title><link>http://konveyor.github.io/move2kube/overview/</link><pubDate>Fri, 08 Jul 2022 14:41:25 -0600</pubDate><guid>http://konveyor.github.io/move2kube/overview/</guid><description>The Move2Kube tool helps application owners migrate legacy workloads to run on Kubernetes clusters and eventually automate their deployments after multiple iterations. It analyzes Docker Compose files, Cloud Foundry manifest files, and even source code to generate Kubernetes deployment files including object YAML files, Helm charts, and operators.
Move2Kube has a very modular architecture making it easy to custom functionality for a large variety of migration use-cases.
The project includes three tools:</description></item><item><title>Overview</title><link>http://konveyor.github.io/tackle/overview/</link><pubDate>Fri, 08 Jul 2022 14:37:53 -0600</pubDate><guid>http://konveyor.github.io/tackle/overview/</guid><description>Tackle is a collection of tools that support modernizing and migrating applications to Kubernetes. These tools assess applications to determine which option is the appropriate migration strategy for each application:
Rehosting Replatforming Refactoring Tackle uses an interactive questionnaire for the assessment which enables key stakeholders to gather information about applications, discuss risks flagged by Tackle, and reach a consensus in formulating recommendations for each application.
Tackle Refactoring Tools The tools are cloud-native micro-services that are accessible from a common Tackle UI.</description></item><item><title>Overview</title><link>http://konveyor.github.io/crane/overview/</link><pubDate>Fri, 08 Jul 2022 14:32:29 -0600</pubDate><guid>http://konveyor.github.io/crane/overview/</guid><description>The Crane tool helps application owners migrate Kubernetes workloads and their states between clusters, remove environment-specific configuration, and automate application deployments along the way.
The process uses a few tools:
crane: The command line tool that migrates applications to the terminal. crane-lib: The brains behind Crane functionality responsible for transforming resources. crane-plugin-openshift: Plugin specifically tailored to manage OpenShift migration workloads and an example of a repeatable best-practice. crane-plugins: Collection of plugins from the Konveyor community based on experience from performing Kube migrations.</description></item><item><title>Overview</title><link>http://konveyor.github.io/forklift/overview/</link><pubDate>Thu, 07 Jul 2022 10:57:01 -0600</pubDate><guid>http://konveyor.github.io/forklift/overview/</guid><description>Forklift provides a simplistic way of large scale migration virtual machines at scale to Kubernetes from traditional hypervisors like VMware (vSphere) and Red Hat Virtualization (oVirt) to KubeVirt. Forklift is an open source tool based on proven core linux v2v technologies that can rehost a few or hundreds of VMs while minimizing downtime as it lifts and shifts the applications. The benefits of Forklift include:
Migration Analytics: Validate the compatibility of the virtual machine before executing the migration.</description></item><item><title>Upgrading from 1.2 to 2.0</title><link>http://konveyor.github.io/tackle/upgradeto2/</link><pubDate>Wed, 29 Jun 2022 10:53:45 -0600</pubDate><guid>http://konveyor.github.io/tackle/upgradeto2/</guid><description>For additional information, see the Tackle CLI tool directory in the tackle2-hub repository.
A CLI tool is available to upgrade Tackle that will migrate application data seeds from a running 1.2 instance to a running 2.0 instance, or export the data to be imported at a later time. The tool has the following functions:
export-tackle1: Exports Tackle 1.2 API objects into local JSON files (tags, tag types, and job functions).</description></item><item><title>Administrator view tasks</title><link>http://konveyor.github.io/tackle/tackle2/admintasks/</link><pubDate>Tue, 28 Jun 2022 15:16:01 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle2/admintasks/</guid><description>The administrator view is intended to be used by administrators to set up the Tackle instance environment. Credentials This management module enables administrators to create and manage credentials for access to private repositories. It also allows for the architects to assign the credentials to applications without knowing their contents. Configuring source control credentials Follow the steps below to create new credentials for a source control repository.
Procedure
Click Credentials in the left menu of the Administrator view.</description></item><item><title>Tackle 2.0 Views</title><link>http://konveyor.github.io/tackle/tackle2/views/</link><pubDate>Tue, 14 Jun 2022 14:59:53 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle2/views/</guid><description>The latest version of Tackle has the Developers view and the new Architects view to support the three main roles of users:
Administrators: Has access to some application-wide configuration parameters that other users can consume but not change or browse.
Example actions: Define Git credentials, Maven settings, .xml files.
Architects: Often the technical leads for the migration project that can create and modify applications and information related to it. The Architects do not need to have access to sensitive information, but can consume it.</description></item><item><title>Seeding Instances</title><link>http://konveyor.github.io/tackle/tackle2/instances/</link><pubDate>Tue, 14 Jun 2022 14:59:46 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle2/instances/</guid><description>Tackle instances have key parameters that are configured in the Controls window prior to migration by the project architect and can be added and edited as needed.
These parameters define applications and individuals, teams, verticals or areas within an organization affected or participating in the migration.
Stakeholders Stakeholder groups Job functions Business services Tag types Tags Seeding Tackle instance The steps to creating and configuring a Tackle instance can be performed in any order, but the suggested order below is the most efficient for creating stakeholders and tags.</description></item><item><title>Installing Tackle 2.0</title><link>http://konveyor.github.io/tackle/installation/</link><pubDate>Tue, 14 Jun 2022 14:59:30 -0600</pubDate><guid>http://konveyor.github.io/tackle/installation/</guid><description>Follow the steps below to provision the minikube cluster and install Tackle 2.0.
Provisioning Minikube Follow the steps below to provision minikube for single users deploying Tackle on a workstation. These steps will configure minikube and enable:
Ingress so the Tackle tool can publish outside of the Kubernetes cluster. Operator lifecycle manager (OLM) addon. (OpenShift has OLM installed out of the box but Kubernetes does not.) Procedure
Provision the minikube cluster with these recommended parameters.</description></item><item><title>Welcome to Tackle 2.0</title><link>http://konveyor.github.io/tackle2/</link><pubDate>Tue, 14 Jun 2022 14:59:30 -0600</pubDate><guid>http://konveyor.github.io/tackle2/</guid><description>Tackle documentation
Tackle 2.0 includes the seamless integration with the analysis capabilities of the Windup project, also known downstream as Migration Toolkit for Applications, enabling Tackle to effectively manage, assess and now also analyze applications to have a holistic view at your portfolio when dealing with large scale modernization and Kubernetes adoption initiatives. This is essential to provide key insights that allow Architects leading these massive projects to make informed decisions, thus reducing risks and making the required effort measurable and predictable.</description></item><item><title>Assessing and analyzing applications</title><link>http://konveyor.github.io/tackle/tackle2/assessanalyze/</link><pubDate>Tue, 14 Jun 2022 14:59:11 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle2/assessanalyze/</guid><description>Tackle core functions are assessing and analyzing the applications for migration and are performed on the Application inventory page. Assessing applications Follow the steps below to facilitate discussion of application migration.
Procedure
Click Application inventory in the left menu in the Development view. Click the checkbox to the left of the application being assessed. Note: Only one application can be assessed at a time.
Click the Assess button. Select the Stakeholders and Stakeholder groups from the drop-down lists to track who contributed to the assessment for future reference.</description></item><item><title>Adding applications</title><link>http://konveyor.github.io/tackle/tackle2/addapps/</link><pubDate>Tue, 14 Jun 2022 14:58:52 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle2/addapps/</guid><description>Applications can be added to Tackle by creating new applications from scratch manually or by importing them. Tackle applications are defined by manually entered and pre-defined attributes:
Name (manual) Description (manual) Business service (pre-defined) Tags (pre-defined) Source code Binary Creating a new application Follow the steps below to add a new application to the inventory for assessment and analysis.
Note: Before starting this procedure, it is helpful to set up business services and check tags and tag types and create additions as needed.</description></item><item><title>Migration plan options</title><link>http://konveyor.github.io/forklift/migratingvms/migrateoptions/</link><pubDate>Thu, 19 May 2022 10:04:15 -0600</pubDate><guid>http://konveyor.github.io/forklift/migratingvms/migrateoptions/</guid><description>On the Migration plans page of the Forklift web console, click the Options menu kebab beside a migration plan to access the following options:
Edit: Edit the details of a migration plan. A migration plan cannot be edited while it is running or after it has completed successfully. Duplicate: Create a new migration plan with the same virtual machines (VMs), parameters, mappings, and hooks as an existing plan. Use this feature for the following tasks: Migrating VMs to a different namespace.</description></item><item><title>Migrating virtual machines using the command line</title><link>http://konveyor.github.io/forklift/migratingvms/migratecli/</link><pubDate>Thu, 19 May 2022 10:04:06 -0600</pubDate><guid>http://konveyor.github.io/forklift/migratingvms/migratecli/</guid><description>Follow the steps below to migrate virtual machines (VMs) to KubeVirt using the command line (CLI) by creating Forklift custom resources (CRs) and specifying:
A name for cluster-scoped CRs A name and a namespace for namespace-scoped CRs Prerequisites
Must be logged in as a user with cluster-admin privileges. VMware only: Must have the vCenter SHA-1 fingerprint. Must create a VMware Virtual Disk Development Kit (VDDK) image in a secure registry that is accessible to all clusters.</description></item><item><title>Migrating virtual machines using the web console</title><link>http://konveyor.github.io/forklift/migratingvms/migrateweb/</link><pubDate>Thu, 19 May 2022 10:03:16 -0600</pubDate><guid>http://konveyor.github.io/forklift/migratingvms/migrateweb/</guid><description>Migrate virtual machines (VMs) to KubeVirt using the Forklift web console by performing the folloing tasks:
Adding source and destination providers Creating network and storage mapping Creating and running a migration plan Prerequisites
Ensure that all Prerequisites are set. VMware only: Create a VMware Virtual Disk Development Kit (VDDK) image. Adding source providers Follow the procedures below to add VMware or oVirt source providers using the Forklift web console.
Adding a VMware source provider Add a VMware source provider by using the Forklift web console.</description></item><item><title>Canceling a migration</title><link>http://konveyor.github.io/forklift/migratingvms/cancelmigrate/</link><pubDate>Wed, 18 May 2022 11:30:43 -0600</pubDate><guid>http://konveyor.github.io/forklift/migratingvms/cancelmigrate/</guid><description>Follow the steps below to cancel the migration of some or all virtual machines (VMs) while a migration plan is in progress by using the Forklift web console.
Procedure
Click Migration Plans. Click the name of a running migration plan to view the migration details. Select one or more VMs and click Cancel. Click Yes, cancel to confirm the cancellation. The status of the VM shows canceled in the Migration details by VM list.</description></item><item><title>Advanced migration options</title><link>http://konveyor.github.io/forklift/migratingvms/advancedmigrate/</link><pubDate>Wed, 18 May 2022 11:04:36 -0600</pubDate><guid>http://konveyor.github.io/forklift/migratingvms/advancedmigrate/</guid><description>Changing precopy intervals for warm migration Follow the steps below to change the snapshot interval by patching the ForkliftController custom resource (CR).
Procedure
Patch the ForkliftController CR: $ kubectl patch forkliftcontroller/&amp;lt;forklift-controller&amp;gt; -n konveyor-forklift -p &amp;#39;{&amp;#34;spec&amp;#34;: {&amp;#34;controller_precopy_interval&amp;#34;: &amp;lt;60&amp;gt;}}&amp;#39; --type=merge (1) The explanation below refers to the callout in the sample code above.
(1) Specify the precopy interval in minutes. The default value is 60. Note: The forklift-controller pod does not need to be restarted.</description></item><item><title>Upgrading Forklift</title><link>http://konveyor.github.io/forklift/installingforklift/upgrade/</link><pubDate>Tue, 17 May 2022 14:36:19 -0600</pubDate><guid>http://konveyor.github.io/forklift/installingforklift/upgrade/</guid><description>Follow the steps below to upgrade the Forklift Operator using the OKD web console.
Important: Do not skip a release when upgrading. For example, upgrade 2.0 to 2.1 and then 2.1 to 2.2.
If upgrading from 2.2 to 2.3, see the ### Forklift 2.2 to 2.3 Upgrade Notes section after the procedure
Procedure
Open the OKD web console. Click Operators, Installed Operators, Migration Tookit for Virtualization Operator, then Subscription. Change the update channel to the correct release.</description></item><item><title>Uninstalling Forklift</title><link>http://konveyor.github.io/forklift/installingforklift/uninstall/</link><pubDate>Tue, 17 May 2022 14:16:26 -0600</pubDate><guid>http://konveyor.github.io/forklift/installingforklift/uninstall/</guid><description>Uninstall Forklift using the OKD web console or the command line interface (CLI).
Uninstalling Forklift with the OKD web console Follow the steps below to uninstall Forklift using the OKD web console to delete the konveyor-forklift project and custom resource definitions (CRDs).
Prerequisites
Log in as a user with cluster-admin privileges. Procedure
Click Home and then Projects. Locate the konveyor-forklift project. Select Delete Project from the Options menu kebab on the right side of the project.</description></item><item><title>Installing the Forklift Operator</title><link>http://konveyor.github.io/forklift/installingforklift/installation/</link><pubDate>Wed, 11 May 2022 15:57:06 -0600</pubDate><guid>http://konveyor.github.io/forklift/installingforklift/installation/</guid><description>The Forklift Operator can be installed using the OKD web console or the command line interface (CLI).
Installing the Forklift Operator using the OKD web console Follow the steps below to install the Forklift Operator by using the OKD web console.
Prerequisites
OKD 4.10 installed. KubeVirt Operator installed. Procedure
Log in with cluster-admin permissions. OPen the OKD web console, click Operators, then OperatorHub. Use the Filter by keyword field to search for forklift-operator.</description></item><item><title>Prerequisites</title><link>http://konveyor.github.io/forklift/installingforklift/prereqs/</link><pubDate>Wed, 11 May 2022 15:56:20 -0600</pubDate><guid>http://konveyor.github.io/forklift/installingforklift/prereqs/</guid><description>The following prerequisites ensure the environment is prepared for migration.
Software compatibility guidelines Install compatible software versions with Forklift using the table below.
Forklift OKD KubeVirt VMware vSphere oVirt 2.3 4.10 4.10 6.5 or later 4.4.9 or later Storage support and default modes Forklift uses the following default volume and access modes for supported storage.
Note: The following settings must be applied if the KubeVirt storage does not support dynamic provisioning:</description></item><item><title>Upgrading Tackle</title><link>http://konveyor.github.io/tackle/tackle1/upgrade/</link><pubDate>Thu, 05 May 2022 18:47:38 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle1/upgrade/</guid><description>Tackle application instances are upgraded manually.
Upgrading from version 1.1.0 to 1.2.0 Follow the steps below to manually upgrade an instance of the Tackle application from 1.1.0 to 1.2.0.
Prerequisites
Project administrator privileges. Procedure
Important: Specify the namespace and the Tackle instance name for each step.
Update the Keycloak deployment of the Tackle instance: $ kubectl set image -n &amp;lt;namespace&amp;gt; deployment/&amp;lt;tackle_instance&amp;gt;-keycloak keycloak-theme=quay.io/konveyor/tackle-keycloak-init:1.2.0 Update the application-inventory-rest deployment: $ kubectl set image -n &amp;lt;namespace&amp;gt; deployment/&amp;lt;tackle_instance&amp;gt;-application-inventory-rest \ &amp;lt;tackle_instance&amp;gt;-application-inventory-rest=quay.</description></item><item><title>Web Console Services</title><link>http://konveyor.github.io/tackle/tackle1/webconsolesvcs/</link><pubDate>Thu, 05 May 2022 17:16:42 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle1/webconsolesvcs/</guid><description>Tackle web console provides the following services:
Application inventory Assessments Reviews Reports Controls Application inventory The Application inventory page can perform the following tasks:
Manage application portfolios. Define and manage application dependencies. Link applications to the business services that they support. Describe and categorize applications by using tags. Assessments The applications are assessed on the Application inventory page which helps determine the appropriate migration strategy for each application:
Rehosting Replatforming Refactoring Reviews Review a completed assessment on the Application inventory page where the following information is collected from each reviewer:</description></item><item><title>Managing users and credentials</title><link>http://konveyor.github.io/tackle/tackle1/manageusers/</link><pubDate>Thu, 05 May 2022 16:40:47 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle1/manageusers/</guid><description>Follow the procedures in this section to manage Tackle users and passwords using the Keycloak admin console.
Accessing the Keycloak admin console A Keycloak admin user is created when Tackle is installed. The admin username and password are needed to log in to the Keycloak admin console. The credentials are stored in the tackle-keycloak secret.
Prerequisites
Cluster-admin privileges. Procedure
Run the following command to obtain the admin credentials: $ kubectl get secret tackle-keycloak -o go-template=&amp;#39;{{range $k,$v := .</description></item><item><title>Managing assessments</title><link>http://konveyor.github.io/tackle/tackle1/manageassess/</link><pubDate>Thu, 05 May 2022 15:15:05 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle1/manageassess/</guid><description>Start, edit, review, and delete application assessments in the Application inventory page of the Tackle web console.
Starting an assessment Follow the steps below to start an application assessment on the Application inventory page of the Tackle web console.
Procedure
Start the Tackle web console Click Application Inventory. Select an application that does not have a Completed assessment status and click the Assess button in the toolbar. Select individual stakeholders or stakeholder groups and then click Next.</description></item><item><title>Managing applications</title><link>http://konveyor.github.io/tackle/tackle1/manageapps/</link><pubDate>Thu, 05 May 2022 10:51:42 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle1/manageapps/</guid><description>Managing Applications Follow the procedures in this section to create, import, tag, and modify the applications in the Application inventory page of the Tackle web console.
Creating an application Follow the steps below to create an application on the Application inventory page of the Tackle web console.
Procedure
Open the Tackle web console. Click Application inventory and then Create New. Complete the following fields: Name: Name of the application. Description: Optional.</description></item><item><title>Additional tools</title><link>http://konveyor.github.io/tackle/tackle1/additionaltools/</link><pubDate>Tue, 03 May 2022 11:01:08 -0600</pubDate><guid>http://konveyor.github.io/tackle/tackle1/additionaltools/</guid><description>DIVA Tackle DiVA is a data-centric application analysis tool that imports a set of target application source files and provides database/transaction analysis results.
Test Generator Tackle Test Generator is an automatic test-generation and differential-testing tool that currently supports unit-level test generation for Java applications. (Future project plans include adding capabilities for automated generation of end-to-end UI/UX test cases for web applications and test cases for REST APIs.)
Container Advisor Tackle Container Advisor provides containerization advisory information for a large scale application portfolio.</description></item><item><title>Installing Tackle 1.0</title><link>http://konveyor.github.io/tackle/installation1/</link><pubDate>Tue, 03 May 2022 11:00:46 -0600</pubDate><guid>http://konveyor.github.io/tackle/installation1/</guid><description>Follow the steps below to provision the minikube cluster and install Tackle 1.2.
Provisioning Minikube Follow the steps below to provision minikube for single users deploying Tackle on a workstation. These steps will configure minikube and enable:
Ingress so the Tackle tool can publish outside of the Kubernetes cluster. Operator lifecycle manager (OLM) addon. (OpenShift has OLM installed out of the box but Kubernetes does not.) Procedure
Provision the minikube cluster with these recommended parameters.</description></item><item><title>Step One: Export Resources</title><link>http://konveyor.github.io/crane/usingcrane/step1export/</link><pubDate>Fri, 22 Apr 2022 10:29:18 -0600</pubDate><guid>http://konveyor.github.io/crane/usingcrane/step1export/</guid><description>The first step of the cluster migration process is exporting resources from a source cluster of any namespace to be input for the subsequent commands.
All of the following export commands will output the contents of the foo namespace into a local export directory with the context demo defined in KUBECONFIG.
crane export -n foo -e export --context demo cat &amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; conf.yaml namespace: foo export-dir: export context: demo EOF crane export -c conf.</description></item><item><title>Step Two: Transform Exports</title><link>http://konveyor.github.io/crane/usingcrane/step2transform/</link><pubDate>Fri, 22 Apr 2022 10:29:06 -0600</pubDate><guid>http://konveyor.github.io/crane/usingcrane/step2transform/</guid><description>The Transform command facilitates the changes to the exported resources that are frequently necessary when migrating workloads between one environment to another. For example:
Stripping the resource status information that is no longer relevant after the resource is serialized out of a cluster. Adjusting resource quotas to fit the destination environment. Altering node selectors to match the new environment if the node labels do not match the source environment. Applying custom labels or annotations to resources during the migration.</description></item><item><title>Step Three: Apply Patches</title><link>http://konveyor.github.io/crane/usingcrane/step3apply/</link><pubDate>Fri, 22 Apr 2022 10:28:43 -0600</pubDate><guid>http://konveyor.github.io/crane/usingcrane/step3apply/</guid><description>The final step of the cluster migration process is to apply all the patches generated by the Transform command to exported resources.
crane apply -e export -t transform -o output Apply the patches in the transform directory to the resources in the export directory and save the modified resource files in the output directory.
After applying the patches, the resources located in output directory can either be deployed to the destination cluster using kubectl apply, or they can be pushed to a repository and then applied with the help of the GitOps pipeline.</description></item><item><title>Integrating GitOps</title><link>http://konveyor.github.io/crane/tools/gitopsintegration/</link><pubDate>Thu, 14 Apr 2022 15:22:46 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/gitopsintegration/</guid><description>All Crane commands are individual utilities, but when used together in sequence, they form a pipeline.
Crane makes it easy to integrate a gitops that applies the patches/resources generated at the end of the apply command on the destination cluster. The resources generated at the end of the process (i.e export, transform, apply) can be pushed to a github repository, and a pipeline can be created to deploy the resources on a cluster on every push.</description></item><item><title>Developing custom plugins</title><link>http://konveyor.github.io/crane/tools/customplugins/</link><pubDate>Thu, 14 Apr 2022 15:22:29 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/customplugins/</guid><description>This document covers how to write a plugin binary using crane-lib. It requires:
Procedure
Go to the development environment setup. (Optionally, an overview of the crane toolkit.)
Create binary plugin for crane-lib as a simple Go program in the following format that will:
Read an input from stdin. Call the Run function with the input object passed as unstructured. Print the return value of Run function on stdout. package main import ( &amp;#34;fmt&amp;#34; jsonpatch &amp;#34;github.</description></item><item><title>Tunnel API</title><link>http://konveyor.github.io/crane/tools/tunnelapi/</link><pubDate>Thu, 14 Apr 2022 15:21:57 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/tunnelapi/</guid><description>The tunnel-api sub-command can be used to access an on-premise cluster from a cloud cluster to allow orchestrating migrations from on-premise clusters using MTC where access is not possible otherwise.
An openvpn client on the on-premise cluster will connect to a server running on the cloud cluster and the openvpn server is exposed to the client using a load balancer address on the cloud cluster.
A service created on the cloud cluster is used to expose the on-premise clusters API to MTC running on the cloud cluster.</description></item><item><title>Plugin Manager</title><link>http://konveyor.github.io/crane/tools/pluginmanager/</link><pubDate>Thu, 14 Apr 2022 15:19:04 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/pluginmanager/</guid><description>The Plugin Manager is an optional utility that assists in adding plugins to the appropriate location to be consumed by the transform command.
List Plugin utility The List Plugin utility discovers available plugins that that are compatible with the current OS and architecture.
crane plugin-manager list Listing from the repo default +-----------------+------------------+-------------------+ | NAME | SHORTDESCRIPTION | AVAILABLEVERSIONS | +-----------------+------------------+-------------------+ | OpenshiftPlugin | OpenshiftPlugin | v0.0.1 | +-----------------+------------------+-------------------+ Other valid execution examples This command lists all installed plugins managed by plugin-manager.</description></item><item><title>Stateless application mirror</title><link>http://konveyor.github.io/crane/tutorials/statelessappmirror/</link><pubDate>Thu, 14 Apr 2022 15:18:35 -0600</pubDate><guid>http://konveyor.github.io/crane/tutorials/statelessappmirror/</guid><description>This tutorial is an example of how to mirror a simple, stateless PHP Guestbook application using Crane.
Roadmap
1. Deploy the Guestbook application in the source cluster. 2. Extract resources from the source cluster using Crane Export. 3. Transform resources to prepare manifests for the destination cluster using Crane Transform. 4. Apply the transformations using Crane Apply. Apply application manifests to the destination cluster. Prerequisites
Create a source and destination Kubernetes cluster environment in minikube or Kind: minikube</description></item><item><title>Installing Crane</title><link>http://konveyor.github.io/crane/installation/</link><pubDate>Thu, 14 Apr 2022 15:17:07 -0600</pubDate><guid>http://konveyor.github.io/crane/installation/</guid><description>Follow the procedure below to install the Crane tool.
Step 1. Install the Crane binary. Enter the following command to install the latest version of Crane binary. curl -sL https://api.github.com/repos/konveyor/crane/releases/latest | jq -r &amp;#34;.assets[] | select(.name | contains(\&amp;#34;&amp;lt;arch&amp;gt;-&amp;lt;os&amp;gt;\&amp;#34;)) | .browser_download_url&amp;#34; | wget -i- chmod +x &amp;lt;binary&amp;gt; cp &amp;lt;binary&amp;gt; /usr/bin/crane Crane currently supports three architectures: amd64-linux amd64-darwin arm64-darwin Run the following command to download the latest version of Crane for amd64-linux. curl -sL https://api.</description></item><item><title>Migrating a Kubernetes cluster</title><link>http://konveyor.github.io/crane/tutorials/migratek8cluster/</link><pubDate>Thu, 14 Apr 2022 15:14:19 -0600</pubDate><guid>http://konveyor.github.io/crane/tutorials/migratek8cluster/</guid><description>This tutorial is an example of how to use the Konveyor tool Crane to migrate an application (inventory) from the source Kubernetes cluster (src) to the destination cluster (dest).
Refer to the Crane Documentation for more detailed information.
Note: In addition to migrating with Crane, it is helpful to push the application to git so it can be automatically deployed to any cluster in the future. This demo includes those steps.</description></item></channel></rss>