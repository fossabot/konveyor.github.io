<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Documentation for Konveyor projects</title><link>http://konveyor.github.io/move2kube/tutorials/</link><description>Recent content in Tutorials on Documentation for Konveyor projects</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 04 Aug 2022 19:09:22 -0600</lastBuildDate><atom:link href="http://konveyor.github.io/move2kube/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Move2Kube CLI</title><link>http://konveyor.github.io/move2kube/tutorials/usingcli/</link><pubDate>Thu, 04 Aug 2022 19:09:57 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/usingcli/</guid><description>This tutorial shows how to transform a set of sample applications to run on Kubernetes using the Move2Kube CLI tool to generate the Kubernetes YAMLs, Dockerfiles, build scripts for each application, and then build the container images to deploy them to a cluster.
Prerequisites Install the Move2Kube CLI tool.
Use thelanguage-platforms sample directory which has a combination of multiple applications in different languages (Java, Go, Python, Ruby, etc.) that need to be containerized and deployed to Kubernetes.</description></item><item><title>Using Move2Kube UI</title><link>http://konveyor.github.io/move2kube/tutorials/usingui/</link><pubDate>Thu, 04 Aug 2022 19:10:11 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/usingui/</guid><description>Similar to the command line tool, the Move2Kube Web-UI can also perform the transformation with all the capabilities that are in the command line tool. This document explains the steps to bring up the UI and backend using Docker and use it for transformation.
Prerequisites Install Docker.
Use the language-platforms sample. The language-platforms file has a combination of multiple applications in different languages (Java, Go, Python, Ruby, etc.) which need to be containerized and then put into Kubernetes.</description></item><item><title>Customize Kubernetes YAMLs to target specific clusters</title><link>http://konveyor.github.io/move2kube/tutorials/customkubeyaml/</link><pubDate>Thu, 04 Aug 2022 19:13:38 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/customkubeyaml/</guid><description>Move2Kube already supports targeting across multiple clusters including: Kubernetes, Openshift, IBM-IKS, IBM-Openshift, Azure-EKS, Azure-AKS and GCP-GKS. There might be situations that require generating Kubernetes YAMLs to target a particular cluster. This tutorial shows how to use Konveyor Move2Kube to change the versions of existing Kubernetes resources to target a particular cluster. Move2Kube can also be customized to generate Kubernetes YAMLS deployable on a particular cluster.
Prerequisites
Install the Move2Kube CLI tool.</description></item><item><title>Create Helm-charts, Kustomize overlays from Kubernetes Yamls</title><link>http://konveyor.github.io/move2kube/tutorials/createhelmchartskustomize/</link><pubDate>Thu, 04 Aug 2022 19:13:10 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/createhelmchartskustomize/</guid><description>This tutorial will show how to transform a set of Kubernetes YAMLs by parameterizing them by using Move2Kube to generate parameterized Helm charts, Kustomize and Openshift Templates from the Kubernetes YAMLs. Move2Kube can also change the version of Kubernetes resources to target particular clusters.
Prerequisites
Move2Kube CLI tool is installed. Use a kubernetes-to-kubernetes sample. The kubernetes-to-kubernetes directory has some Kubernetes YAMLs that deploy a web app with multiple services. There are three services: a frontend website in PHP, a backend API in Node.</description></item><item><title>Create and deploy Windows .NET containers</title><link>http://konveyor.github.io/move2kube/tutorials/createwincontainersnet/</link><pubDate>Thu, 04 Aug 2022 19:12:22 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/createwincontainersnet/</guid><description>.NET applications in 4.x framework This tutorial shows how containerize .NET applications developed for 4.x versions of .NET framework using Windows containers and deploy them to Kubernetes cluster using Move2Kube. This tutorial uses the sample WCF service from samples/wcfservice.
Prerequisites Install Move2Kube.
Configure Kubernetes with windows node support.
Download the samples/wcfservice sample from move2kube-demos repository.
$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d samples/wcfservice -r move2kube-demos $ tree -L 2 wcfservice/ wcfservice/ ├── wcfservice │ ├── App.</description></item><item><title>Migrate and deploy .NET Core applications to Kubernetes</title><link>http://konveyor.github.io/move2kube/tutorials/migratedeploynetcore/</link><pubDate>Thu, 04 Aug 2022 19:11:51 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/migratedeploynetcore/</guid><description>This tutorial shows how to migrate and deploy .NET Core applications to a Kubernetes cluster using the target artifacts generated by Move2Kube with the data from samples/dotnet5.
Prerequisites Install Move2Kube.
Install a container runtime: Docker or Podman.
Install Kubectl.
Verify the dependencies were correctly installed.
$ docker version or
$ podman info $ kubectl version Download the samples/dotnet5 sample from move2kube-demos repository.
$ curl https://move2kube.konveyor.io/scripts/download.sh | bash -s -- -d samples/dotnet5 -r move2kube-demos View the structure inside the .</description></item><item><title>Migrate from Docker Compose to Kubernetes</title><link>http://konveyor.github.io/move2kube/tutorials/migratedockercomposekube/</link><pubDate>Thu, 04 Aug 2022 19:11:24 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/migratedockercomposekube/</guid><description>Move2Kube automatically analyzes all the YAML files in the docker-compose directory and transforms and creates all artifacts required for deploying the application in Kubernetes using the transform command.
$ move2kube transform -s docker-compose Prerequisites Install the Move2Kube CLI tool. Note: This tutorial has been created with v0.3.3-rc.2 version of Move2Kube.
$ MOVE2KUBE_TAG=&amp;#39;v0.3.3-rc.2&amp;#39; bash &amp;lt;(curl https://raw.githubusercontent.com/konveyor/move2kube/main/scripts/install.sh) Install a Kubernetes cluster from MiniKube. Overview This tutorial shows how to migrate an application written for Docker Compose to run on Kubernetes using the two Docker Compose samples from the move2kube-demos repo.</description></item><item><title>Migrate and deploy Cloud Foundry applications to Kubernetes</title><link>http://konveyor.github.io/move2kube/tutorials/migratedeploycfapps/</link><pubDate>Thu, 04 Aug 2022 19:10:59 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/migratedeploycfapps/</guid><description>This tutorial shows how to install Move2Kube and use the Move2Kube process (collect, plan and transform) to create deployment artifacts for Cloud Foundry apps using the data from samples/cloud-foundry.
Using the transform command, Move2Kube will automatically analyze all the artifacts in the cloud-foundry directory and transform and create all the artifacts required for deploying the application in Kubernetes.
$ move2kube transform -s cloud-foundry Prerequisites A source directory containing the source code files and/or the manifest.</description></item><item><title>Run transforms non-interactively</title><link>http://konveyor.github.io/move2kube/tutorials/runnoninteractively/</link><pubDate>Thu, 04 Aug 2022 19:10:32 -0600</pubDate><guid>http://konveyor.github.io/move2kube/tutorials/runnoninteractively/</guid><description>Move2Kube interacts with users through a series of questions during the transformation phase. After looking at the output, re-running it and giving different answers to some of the questions may be necessary. In order to avoid answering all of the same questions over and over, Move2Kube provides a simple configuration file.
In the directory where the move2kube transform command was run there is a file called m2kconfig.yaml which contains the answers provided to all of the questions that were asked.</description></item></channel></rss>