<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on Documentation for Konveyor projects</title><link>http://konveyor.github.io/crane/tools/</link><description>Recent content in Tools on Documentation for Konveyor projects</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Apr 2022 19:36:40 -0600</lastBuildDate><atom:link href="http://konveyor.github.io/crane/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Integrating GitOps</title><link>http://konveyor.github.io/crane/tools/gitopsintegration/</link><pubDate>Thu, 14 Apr 2022 15:22:46 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/gitopsintegration/</guid><description>All Crane commands are individual utilities, but when used together in sequence, they form a pipeline.
Crane makes it easy to integrate a gitops that applies the patches/resources generated at the end of the apply command on the destination cluster. The resources generated at the end of the process (i.e export, transform, apply) can be pushed to a github repository, and a pipeline can be created to deploy the resources on a cluster on every push.</description></item><item><title>Developing custom plugins</title><link>http://konveyor.github.io/crane/tools/customplugins/</link><pubDate>Thu, 14 Apr 2022 15:22:29 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/customplugins/</guid><description>This document covers how to write a plugin binary using crane-lib. It requires:
Procedure
Go to the development environment setup. (Optionally, an overview of the crane toolkit.)
Create binary plugin for crane-lib as a simple Go program in the following format that will:
Read an input from stdin. Call the Run function with the input object passed as unstructured. Print the return value of Run function on stdout. package main import ( &amp;#34;fmt&amp;#34; jsonpatch &amp;#34;github.</description></item><item><title>Tunnel API</title><link>http://konveyor.github.io/crane/tools/tunnelapi/</link><pubDate>Thu, 14 Apr 2022 15:21:57 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/tunnelapi/</guid><description>The tunnel-api sub-command can be used to access an on-premise cluster from a cloud cluster to allow orchestrating migrations from on-premise clusters using MTC where access is not possible otherwise.
An openvpn client on the on-premise cluster will connect to a server running on the cloud cluster and the openvpn server is exposed to the client using a load balancer address on the cloud cluster.
A service created on the cloud cluster is used to expose the on-premise clusters API to MTC running on the cloud cluster.</description></item><item><title>Plugin Manager</title><link>http://konveyor.github.io/crane/tools/pluginmanager/</link><pubDate>Thu, 14 Apr 2022 15:19:04 -0600</pubDate><guid>http://konveyor.github.io/crane/tools/pluginmanager/</guid><description>The Plugin Manager is an optional utility that assists in adding plugins to the appropriate location to be consumed by the transform command.
List Plugin utility The List Plugin utility discovers available plugins that that are compatible with the current OS and architecture.
crane plugin-manager list Listing from the repo default +-----------------+------------------+-------------------+ | NAME | SHORTDESCRIPTION | AVAILABLEVERSIONS | +-----------------+------------------+-------------------+ | OpenshiftPlugin | OpenshiftPlugin | v0.0.1 | +-----------------+------------------+-------------------+ Other valid execution examples This command lists all installed plugins managed by plugin-manager.</description></item></channel></rss>